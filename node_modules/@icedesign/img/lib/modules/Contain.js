'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _aliCDNSuffix = require('./aliCDNSuffix');

var _aliCDNSuffix2 = _interopRequireDefault(_aliCDNSuffix);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

/* eslint-disable react/prefer-stateless-function */
var Contain = (_temp = _class = function (_Component) {
  _inherits(Contain, _Component);

  function Contain() {
    _classCallCheck(this, Contain);

    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  Contain.prototype.render = function render() {
    var _props = this.props,
        alt = _props.alt,
        title = _props.title,
        src = _props.src,
        width = _props.width,
        height = _props.height,
        _props$style = _props.style,
        style = _props$style === undefined ? {} : _props$style,
        className = _props.className,
        onError = _props.onError,
        shape = _props.shape,
        enableAliCDNSuffix = _props.enableAliCDNSuffix;


    var styles = _extends({}, style, {
      display: 'inline-block',
      width: width,
      height: height,
      overflow: 'hidden'
    });

    var centerStyles = {
      width: width,
      height: height,
      display: 'table-cell',
      verticalAlign: 'middle',
      textAlign: 'center'
    };

    var imgStyles = {
      width: 'auto',
      height: 'auto',
      maxWidth: width,
      maxHeight: height
    };

    var realSrc = enableAliCDNSuffix ? src + (0, _aliCDNSuffix2.default)({ width: width, height: height }) : src;

    var cls = (0, _classnames2.default)('ice-img', shape, className);

    return _react2.default.createElement(
      'div',
      { className: cls, style: styles },
      _react2.default.createElement(
        'div',
        { style: centerStyles },
        _react2.default.createElement('img', {
          style: imgStyles,
          onError: onError,
          src: realSrc,
          alt: alt,
          title: title
        })
      )
    );
  };

  return Contain;
}(_react.Component), _class.displayName = 'Contain', _class.propTypes = {
  src: _propTypes2.default.string.isRequired,
  width: _propTypes2.default.number,
  height: _propTypes2.default.number,
  alt: _propTypes2.default.string,
  onError: _propTypes2.default.func,
  shape: _propTypes2.default.string
}, _class.defaultProps = {
  onError: function onError() {},
  alt: '',
  width: 0,
  height: 0,
  shape: 'cover'
}, _temp);
exports.default = Contain;
module.exports = exports['default'];